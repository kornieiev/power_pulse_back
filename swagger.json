{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Power Pulse Back",
    "description": "Showing off swagger-ui-express",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json", "multipart/form-data"],
  "servers": [
    { "url": "http://localhost:3000" },
    { "url": "https://powerpulseback.onrender.com" }
  ],
  "tags": [
    {
      "name": "Authorization",
      "description": "Authorizationorization endpoints"
    }
  ],

  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Authorization"],
        "summary": "User registration",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },

    "/users/verify/{verificationToken}": {
      "get": {
        "tags": ["Authorization"],
        "summary": "User verification",
        "parameters": [
          {
            "in": "path",
            "name": "verificationToken",
            "required": true,
            "type": "string",
            "description": "Registration token"
          }
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Verification successful",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        }
      }
    },

    "/users/login": {
      "post": {
        "tags": ["Authorization"],
        "summary": "User login",
        "parameters": [],
        "security": [],
        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Email is not verified",
            "content": {}
          },
          "403": {
            "description": "Email or password is wrong",
            "content": {}
          }
        }
      }
    },

    "/users/current": {
      "get": {
        "tags": ["Authorization"],
        "summary": "Current user data",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          }
        }
      }
    },

    "/users/metrics": {
      "put": {
        "tags": ["Authorization"],
        "summary": "Add user metrics",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "addMetrics object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetricsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Not enough data for calculate BMR"
          }
        }
      }
    },

    "/users/avatars": {
      "post": {
        "tags": ["Authorization"],
        "summary": "Add / change user avatar",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Change avatar object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AvatarRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvatarResponse"
                }
              }
            }
          }
        }
      }
    },

    "/users/logout": {
      "post": {
        "tags": ["Authorization"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "LogOut Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password", "name"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "lola@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qweqwe"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Lola"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "User's id",
              "example": "65ed9dd60bd872e7d548338d"
            },
            "name": {
              "type": "string",
              "description": "User's name",
              "example": "Lola"
            },
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email",
              "example": "lola@gmail.com"
            },
            "verificationToken": {
              "type": "string",
              "description": "User's token",
              "example": "kAt8xt3IgDLD9f_aMJ7mT"
            }
          }
        },
        "example": [
          {
            "id": "65ed9dd60bd872e7d548338d",
            "name": "Lola",
            "email": "lola@gmail.com",
            "verificationToken": "kAt8xt3IgDLD9f_aMJ7mT"
          }
        ]
      },

      "LoginResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "token": {
              "type": "string",
              "description": "User's token",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1ZWRjY2VhODQyYmFiODdmODk3NmRkYiIsImlhdCI6MTcxMDA4NjA0OSwiZXhwIjoxNzEwMTcyNDQ5fQ.6YG4M_uDBPLKYfB-cwdFlLqgg9mHwtvvIu-qQ6Ozkm0"
            },
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email",
              "example": "lola@gmail.com"
            }
          }
        },
        "example": {
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1ZWRjY2VhODQyYmFiODdmODk3NmRkYiIsImlhdCI6MTcxMDA4NjA0OSwiZXhwIjoxNzEwMTcyNDQ5fQ.6YG4M_uDBPLKYfB-cwdFlLqgg9mHwtvvIu-qQ6Ozkm0",
          "email": "lola@gmail.com"
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "lola@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qweqwe"
          }
        }
      },

      "CurrentUserResponse": {
        "type": "object",
        "items": {
          "type": "array",
          "properties": {
            "id": {
              "type": "string",
              "description": "User's id",
              "example": "65ede006a39a5ba68a52069e"
            },
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email",
              "example": "lola@gmail.com"
            },
            "userMetrics": {
              "type": "boolean",
              "description": "User's metrics",
              "example": true
            },
            "height": {
              "type": "number",
              "description": "User's height",
              "example": "172"
            },
            "blood": {
              "type": "number",
              "description": "User's blood",
              "example": "3"
            },
            "currentWeight": {
              "type": "number",
              "description": "User's currentWeight",
              "example": "82"
            },
            "desiredWeight": {
              "type": "number",
              "description": "User's desiredWeight",
              "example": "78"
            },
            "levelActivity": {
              "type": "number",
              "description": "User's levelActivity",
              "example": "4"
            },
            "resultBMR": {
              "type": "number",
              "description": "User's resultBMR",
              "example": "1183"
            },
            "sex": {
              "type": "string",
              "description": "User's sex",
              "example": "female"
            },
            "userName": {
              "type": "string",
              "description": "User's name",
              "example": "Lola"
            },
            "birthday": {
              "type": "string",
              "description": "User's birthday",
              "example": "1986-09-06T22:00:00.000Z"
            },
            "age": {
              "type": "number",
              "description": "User's age",
              "example": "37"
            }
          }
        },
        "example": {
          "_id": "65ede006a39a5ba68a52068e",
          "email": "lola@gmail.com",
          "userMetrics": true,
          "height": 172,
          "blood": 3,
          "currentWeight": 82,
          "desiredWeight": 78,
          "levelActivity": 4,
          "resultBMR": 11834,
          "sex": "female",
          "userName": "Lola",
          "birthday": "1986-09-06T22:00:00.000Z",
          "age": 37
        }
      },

      "MetricsRequest": {
        "type": "object",
        "required": [
          "height",
          "currentWeight",
          "desiredWeight",
          "blood",
          "sex",
          "levelActivity",
          "age",
          "userName",
          "birthday"
        ],
        "properties": {
          "height": {
            "type": "number",
            "description": "User's height",
            "example": "172"
          },
          "blood": {
            "type": "number",
            "description": "User's blood",
            "example": "3"
          },
          "currentWeight": {
            "type": "number",
            "description": "User's currentWeight",
            "example": "82"
          },
          "desiredWeight": {
            "type": "number",
            "description": "User's desiredWeight",
            "example": "78"
          },
          "levelActivity": {
            "type": "number",
            "description": "User's levelActivity",
            "example": "4"
          },
          "sex": {
            "type": "string",
            "description": "User's sex",
            "example": "female"
          },
          "userName": {
            "type": "string",
            "description": "User's name",
            "example": "Lola"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday",
            "example": "1986-09-06T22:00:00.000Z"
          },
          "age": {
            "type": "number",
            "description": "User's age",
            "example": "37"
          }
        }
      },
      "MetricsResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "updatedUser": {
              "type": "object",
              "items": {
                "email": {
                  "type": "string",
                  "description": "User's email",
                  "format": "email",
                  "example": "lola@gmail.com"
                },
                "verify": {
                  "type": "boolean",
                  "description": "User's verify",
                  "example": true
                },
                "userMetrics": {
                  "type": "boolean",
                  "description": "User's verify",
                  "example": true
                },
                "name": {
                  "type": "string",
                  "description": "User's name",
                  "example": "Lola"
                },
                "createdAt": {
                  "type": "string",
                  "description": "User createdAt",
                  "example": "2024-03-10T16:29:58.855Z"
                },
                "updatedAt": {
                  "type": "string",
                  "description": "User updatedAt",
                  "example": "2024-03-10T18:20:27.757Z"
                },
                "birthday": {
                  "type": "string",
                  "description": "User's birthday",
                  "example": "1986-09-06T22:00:00.000Z"
                },
                "blood": {
                  "type": "number",
                  "description": "User's blood",
                  "example": "3"
                },
                "currentWeight": {
                  "type": "number",
                  "description": "User's currentWeight",
                  "example": "82"
                },
                "desiredWeight": {
                  "type": "number",
                  "description": "User's desiredWeight",
                  "example": "78"
                },
                "height": {
                  "type": "number",
                  "description": "User's height",
                  "example": "172"
                },
                "levelActivity": {
                  "type": "number",
                  "description": "User's levelActivity",
                  "example": "4"
                },
                "resultBMR": {
                  "type": "number",
                  "description": "User's resultBMR",
                  "example": "1172"
                },
                "sex": {
                  "type": "string",
                  "description": "User's sex",
                  "example": "female"
                },
                "userName": {
                  "type": "string",
                  "description": "User's new name",
                  "example": "Lola"
                },
                "age": {
                  "type": "number",
                  "description": "User's age",
                  "example": "37"
                }
              }
            }
          }
        },
        "example": {
          "updatedUser": {
            "_id": "65ede006a39a5ba68a52068e",
            "email": "lo@gmail.com",
            "password": "$2a$10$16.TN7ebg33vGfntBiJz8e.i1JCFK0Ul8.fgluoK9n0E04lnSKNW6",
            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1ZWRlMDA2YTM5YTViYTY4YTUyMDY4ZSIsImlhdCI6MTcxMDA4OTU4MywiZXhwIjoxNzEwMTc1OTgzfQ.hDHbk-RgWmtISkZlccvgnVAngK1ZgJv-Rjj2Jd2giXc",
            "verify": true,
            "verificationToken": "",
            "userMetrics": true,
            "name": "lo",
            "createdAt": "2024-03-10T16:29:58.855Z",
            "updatedAt": "2024-03-10T16:57:01.406Z",
            "birthday": "1986-09-06T22:00:00.000Z",
            "blood": 3,
            "currentWeight": 82,
            "desiredWeight": 78,
            "height": 172,
            "levelActivity": 4,
            "resultBMR": 11834,
            "sex": "male",
            "userName": "Dima",
            "age": 37
          }
        }
      },

      "AvatarRequest": {
        "type": "object",
        "properties": {
          "avatar": {
            "type": "string",
            "description": "User's avatar",
            "format": "binary"
          }
        }
      },
      "AvatarResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {
            "avatarURL": {
              "type": "string",
              "description": "User's avatarURL",
              "example": "https://res.cloudinary.com/df9nqdiv6/image/upload/v1710153959/avatars/garfield.png.png"
            }
          }
        },
        "example": [
          {
            "avatarURL": "https://res.cloudinary.com/df9nqdiv6/image/upload/v1710153959/avatars/garfield.png.png"
          }
        ]
      },

      "LogoutResponse": {
        "type": "object",
        "items": {
          "type": "object",
          "properties": {}
        },
        "example": "LogOut Successful"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
